/* ------ 쉐이더 사용하기 ------
OpenGL은 쉐이더(shader)라 불리는 여러 작은 프로그램을 고정 함수로 연결시켜 작동한다. 
화면에 그릴 때 그래픽스 프로세서는 우리가 작성한 쉐이더를 실행시키고 그 입력과 출력을 파이프라인으로 이동시켜 최종 픽셀이 그려지게 한다. 
화면에 무언가 그리기 위해서라면 적어도 쉐이더 몇 개는 작성해야 한다. 

OpenGL 쉐이더는 OpenGL 쉐이딩 언어(OpenGL Shading Language: GLSL)로 작성한다. 
이 언어는 C에 기반을 두지만 시간이 지남에 따라 그래픽스 프로세서에서 동작하도록 변화되었다. 
이 언어의 컴파일러는 OpenGL에 내장되어 있다. 
우리가 작성한 쉐이더 소스 코드는 쉐이더 객체로 바뀌어 컴파일되고, 여러 쉐이더 객체들이 하나의 프로그램 객체로 링크된다. 
하나의 프로그램 객체는 여러 쉐이더 스테이지(shader stage, 쉐이더 단계)의 쉐이더들을 포함할 수 있다. 
OpenGL 쉐이더 스테이지에는 
버텍스 쉐이더(vertex shader, 정점 쉐이더), 
테셀레이션 컨트롤(tessellation control) 및 이벨루에이션 쉐이더(evaluation shader), 
지오메트리 쉐이더(geometry shader, 기하 쉐이더), 
프래그먼트 쉐이더(fragment shader), 
컴퓨트 쉐이더(compute shader, 계산 쉐이더) 등이 있다. 
웬만한 파이프라인은 적어도 하나의 버텍스 쉐이더(또는 하나의 컴퓨트 쉐이더)로 이루어진다. 
하지만 화면에 픽셀을 그리려면 프래그먼트 쉐이더가 필요하다. 
*/

/* ------ 버전 ------
  #version 460 core 
  * 이를 통해 쉐이더 컴파일러에 쉐이더 언어 version 4.3을 사용할 것이라는 것을 말해준다. 
  * 'core'라는 키워드는 OpenGL의 코어 프로파일의 기능만 사용한다는 의미다. 
*/

/* ------ 메인 함수 ------
 * main 함수를 정의하는 부분이 쉐이더가 수행을 시작하는 부분이다. 
 
 
 
 
